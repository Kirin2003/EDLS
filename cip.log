Total number of tags: [1000]
Total number of expected tags: [1000]
Actual number of tags: [800]
<<<<<<<<<<<<<<<<<<<< Instance: 0>>>>>>>>>>>>>>>>>>>
<<<<<<<<<<<<<<<<<<<< 阅读器: 1 >>>>>>>>>>>>>>>>>>>
消除的意外标签: [0]
The execution time for 1 round of phase one:249.5
第一阶段结束, 所有阅读器的总时间:[ 249.5 ]ms
<<<<<<<<<<<<<<<<<<<< 阅读器: 1 >>>>>>>>>>>>>>>>>>>
该阅读器需要识别的类别数=[ 119 ] 该阅读器识别范围内真实存在的类别数=[ 80 ]
################### 第 1 轮 #######################
缺失率 : 0.3277310924369748
----------------生成filter vector--------------
时隙 = [71] 随机数1 = [60] 随机数2 = [5]
在使用SFMTI之前, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[25个] 2:[22个] 3:[7个] >3:[2个]
生成 Filter Vector: 
最终的filter vector: [[1, 0, 1, 2, 0, 0, 1, 1, 0, 0, 2, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 3, 0, 2, 0, 1, 0, 1, 1, 0, 1, 2, 1, 0, 0, 0, 2, 2, 0, 1, 1, 1, 1, 1, 0, 1, 0, 2, 0, 1, 0, 0, 0, 0, 0, 1, 0, 1, 0, 1, 1, 0, 1, 1, 1, 1, 1, 1, 1, 1, 1]]
本轮识别时间: 21.6
在使用SFMTI之后, filter vector的时隙类型 0,1,2,3,>3: 0:[38个] 1:[34个] 2:[7个] 3:[1个] >3:[0个]
使用SFMTI
-----------------------验证-----------------------
----------------------识别结果-------------------------
时隙=0 结果=单时隙 01010011001110111100010101110110
时隙=1 结果=单时隙 00111100100010001011111000111011
时隙=2 结果=单时隙 11111001011110000110101011110010
时隙=3 结果=单时隙 10010101000011011101111010011010
时隙=4 结果=单时隙 00000000000110101110011110010000
时隙=5 结果=单时隙 00101011111101000010001011101001
时隙=6 结果=单时隙 10111011110100010111110110011100
时隙=7 结果=单时隙 01110000111100111110101000110010
时隙=8 结果=单时隙 10011111011101111011010100110110
时隙=9 结果=单时隙 00000111110010001100110101001001
时隙=10 结果=单时隙 10110110010010101110011111001011
时隙=11 结果=单时隙 01001101000111010001000010011011
时隙=12 结果=单时隙 10110001111011111000001111100111
时隙=13 结果=单时隙 10101110100110011100010010011110
时隙=14 结果=单时隙 11100111111011000111001100111100
时隙=15 结果=单时隙 11110101100001110101000010101010
时隙=16 结果=单时隙 10100111100100100100010001010000
时隙=17 结果=单时隙 11010111000001100111001011010010
时隙=18 结果=单时隙 10111101001101100011001110101111
时隙=19 结果=单时隙 00000001000001101001100111111101
时隙=20 结果=单时隙 11001001100101101001111100100000
时隙=21 结果=单时隙 01101101001000100001100000100101
时隙=22 结果=单时隙 01001101001001101000010100001011
时隙=23 结果=单时隙 11100101111111110110110100010001
时隙=24 结果=单时隙 01101001101110010110010011011001
时隙=25 结果=单时隙 11001010100100110111000011111000
时隙=26 结果=单时隙 01110001100011110010110110110011
时隙=27 结果=单时隙 01001001011010010000000010010001
时隙=28 结果=单时隙 00001001011001011000100110110101
时隙=29 结果=单时隙 01011100101001010110011011100110
时隙=30 结果=单时隙 01010010101100001010110001000110
时隙=31 结果=单时隙 11000010100010001001110101011000
时隙=32 结果=单时隙 11001111001001011000000111010000
时隙=33 结果=单时隙 11000101000101011100001010101000
时隙=34 结果=单时隙 11000001011010101101001011110010
时隙=35 结果=单时隙 10100010100001011001111100000001
时隙=36 结果=单时隙 11100100000100111100001000110100
时隙=37 结果=单时隙 00010100101101110110101011010100
时隙=38 结果=单时隙 01110101110111000000100011100001
时隙=39 结果=单时隙 10001100100010010100010101000001
时隙=40 结果=单时隙 01011110011100010001010011110101
时隙=41 结果=单时隙 00000001101000000011000010110000
################### 第 2 轮 #######################
缺失率 : 0.4025974025974026
----------------生成filter vector--------------
时隙 = [46] 随机数1 = [53] 随机数2 = [22]
在使用SFMTI之前, filter vector的时隙类型 0,1,2,3,>3: 0:[14个] 1:[11个] 2:[18个] 3:[2个] >3:[1个]
生成 Filter Vector: 
最终的filter vector: [[0, 1, 0, 0, 1, 1, 0, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
本轮识别时间: 6.800000000000001
在使用SFMTI之后, filter vector的时隙类型 0,1,2,3,>3: 0:[35个] 1:[11个] 2:[0个] 3:[0个] >3:[0个]
使用SFMTI
-----------------------验证-----------------------
----------------------识别结果-------------------------
时隙=0 结果=单时隙 00111110100010000110111011110001
时隙=1 结果=单时隙 00000100010010110101011110110010
时隙=2 结果=单时隙 10100010101011000100101010011011
时隙=3 结果=单时隙 01101011000100110111101110011010
时隙=4 结果=单时隙 01010110000010100100011101000100
时隙=5 结果=单时隙 11100101000111110000111101111010
时隙=6 结果=单时隙 11011001011100010101011101010101
时隙=7 结果=单时隙 00100111101110000011010111010101
时隙=8 结果=单时隙 01001110011010011001101111010111
时隙=9 结果=单时隙 11100001000110011000111000010010
时隙=10 结果=单时隙 00100000011111011011100111011110
################### 第 3 轮 #######################
缺失率 : 0.4393939393939394
----------------生成filter vector--------------
时隙 = [40] 随机数1 = [77] 随机数2 = [14]
在使用SFMTI之前, filter vector的时隙类型 0,1,2,3,>3: 0:[10个] 1:[17个] 2:[9个] 3:[4个] >3:[0个]
生成 Filter Vector: 
最终的filter vector: [[0, 1, 0, 1, 0, 1, 1, 1, 0, 0, 1, 0, 1, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 2, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 0, 1, 1, 1]]
本轮识别时间: 10.0
在使用SFMTI之后, filter vector的时隙类型 0,1,2,3,>3: 0:[22个] 1:[18个] 2:[1个] 3:[0个] >3:[0个]
使用SFMTI
-----------------------验证-----------------------
----------------------识别结果-------------------------
时隙=0 结果=单时隙 00001011011111100000000001011111
时隙=1 结果=单时隙 00100111110000110110000010110100
时隙=2 结果=单时隙 10011001100010111011001100000110
时隙=3 结果=单时隙 10000111000001000011111110000000
时隙=4 结果=单时隙 00011000000001001110110001011001
时隙=5 结果=单时隙 10011011100000000110010001111001
时隙=6 结果=单时隙 11101101100101101000011100001101
时隙=7 结果=单时隙 00011111111101001001000101111010
时隙=8 结果=单时隙 00011010100001101010100001100000
时隙=9 结果=单时隙 01001101111010010000101110010100
时隙=10 结果=单时隙 10011001010011001000010010100001
时隙=11 结果=单时隙 01100100101000100011010100010001
时隙=12 结果=单时隙 01010010100111101011100011110011
时隙=13 结果=单时隙 01011101000000001100100111011110
时隙=14 结果=单时隙 01101010110101101011111101101000
时隙=15 结果=单时隙 01010010000010101010111010000110
时隙=16 结果=单时隙 11010000101110111001010001110001
时隙=17 结果=单时隙 11011011110100111001011110110111
时隙=18 结果=单时隙 11100001110111101110001000100101
################### 第 4 轮 #######################
缺失率 : 0.5106382978723404
----------------生成filter vector--------------
时隙 = [28] 随机数1 = [52] 随机数2 = [66]
在使用SFMTI之前, filter vector的时隙类型 0,1,2,3,>3: 0:[8个] 1:[14个] 2:[4个] 3:[2个] >3:[0个]
生成 Filter Vector: 
最终的filter vector: [[0, 1, 0, 1, 0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0, 1, 1, 0, 1, 0, 1, 1, 0, 1, 0, 1, 1, 1]]
本轮识别时间: 8.0
在使用SFMTI之后, filter vector的时隙类型 0,1,2,3,>3: 0:[14个] 1:[14个] 2:[0个] 3:[0个] >3:[0个]
使用SFMTI
-----------------------验证-----------------------
----------------------识别结果-------------------------
时隙=0 结果=单时隙 01101000111011000100000001101011
时隙=1 结果=单时隙 00000000001110111000101001011101
时隙=2 结果=单时隙 10011110010011111010110111000001
时隙=3 结果=单时隙 00001010001100011101111101000000
时隙=4 结果=单时隙 01001110111101001010111000110110
时隙=5 结果=单时隙 01001110100111000010111011000110
时隙=6 结果=单时隙 11100000000101000110100001100010
时隙=7 结果=单时隙 01100001011001010111110010111010
时隙=8 结果=单时隙 00011000010110100100011011101110
时隙=9 结果=单时隙 01010111111011011101101110101111
时隙=10 结果=单时隙 10011111110101100100001111011011
时隙=11 结果=单时隙 00000011110010001101001110101000
时隙=12 结果=单时隙 10100011101110110110010101010111
时隙=13 结果=单时隙 01010010100110100001111100110100
################### 第 5 轮 #######################
缺失率 : 0.6666666666666666
----------------生成filter vector--------------
时隙 = [20] 随机数1 = [35] 随机数2 = [56]
在使用SFMTI之前, filter vector的时隙类型 0,1,2,3,>3: 0:[11个] 1:[5个] 2:[3个] 3:[1个] >3:[0个]
生成 Filter Vector: 
最终的filter vector: [[1, 0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0]]
本轮识别时间: 4.4
在使用SFMTI之后, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[5个] 2:[0个] 3:[0个] >3:[0个]
使用SFMTI
-----------------------验证-----------------------
----------------------识别结果-------------------------
时隙=0 结果=单时隙 01000011011001001111010001001100
时隙=1 结果=单时隙 10001101010011010101110000000111
时隙=2 结果=单时隙 01101011000110001110001111001101
时隙=3 结果=单时隙 10010001001111111111001110011011
时隙=4 结果=单时隙 01000010001111110001100100000011
################### 第 6 轮 #######################
缺失率 : 0.75
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [46] 随机数2 = [89]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[7个] 1:[7个] 2:[1个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 2, 0, 0, 1, 1, 0, 0, 1, 0, 0, 1, 1, 1, 1]]
本轮时间: 3.9250000000000003
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[7个] 1:[7个] 2:[1个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
预期为冲突时隙，且有标签回应
时隙=1 结果=单时隙 01100100101001100001110101111010
时隙=2 结果=单时隙 00110100001110101010111000110010
时隙=3 结果=单时隙 00011011010011011101011111011000
时隙=4 结果=单时隙 10101001011110110101101101010101
时隙=5 结果=空时隙, 缺失类别列表=[01011110000011111111110010010010]
时隙=6 结果=单时隙 01011111101101001001111010110101
时隙=7 结果=单时隙 00001111111000010001010000010100
################### 第 7 轮 #######################
缺失率 : 0.9523809523809523
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [42] 随机数2 = [91]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[13个] 1:[2个] 2:[0个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0]]
本轮时间: 1.55
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[13个] 1:[2个] 2:[0个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
时隙=0 结果=空时隙, 缺失类别列表=[10111000111111010000100001010100]
时隙=1 结果=单时隙 01010011111001100000100110011001
################### 第 8 轮 #######################
缺失率 : 0.99
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [49] 随机数2 = [33]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
本轮时间: 0.75
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
################### 第 9 轮 #######################
缺失率 : 0.99
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [68] 随机数2 = [53]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
本轮时间: 0.75
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
################### 第 10 轮 #######################
缺失率 : 0.99
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [52] 随机数2 = [9]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
本轮时间: 0.75
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
################### 第 11 轮 #######################
缺失率 : 0.99
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [67] 随机数2 = [27]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
本轮时间: 0.75
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
################### 第 12 轮 #######################
缺失率 : 0.99
----------------生成filter vector--------------
时隙 = [15] 随机数1 = [52] 随机数2 = [85]
在使用CLS之前, filter vector的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
生成filter vector: 
最终的 filterVector: [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0]]
本轮时间: 0.75
使用CLS之后, filter vector中的时隙类型 0,1,2,3,>3: 0:[15个] 1:[0个] 2:[0个] 3:[0个] >3:[0个]
使用CLS
-----------------------验证-----------------------
----------------------识别结果-------------------------
----------------------------------------
阅读器的总执行时间: [370.725 ms]
第二阶段结束, 所有阅读器的总时间:[ 370.725 ]ms

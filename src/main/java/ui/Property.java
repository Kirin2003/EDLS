package ui;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import domain.ResultInfo;
import org.apache.log4j.Logger;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.util.regex.Pattern;

public class Property {
    public JButton OK;
    // private JTextField textField1;
    public JPanel JPanel;
    private JPanel JPanelOK;
    private JPanel JPanel3;
    private JPanel JPanel4;
    private JPanel JPanel6;
    private JLabel Label3;
    private JLabel Label4;
    private JLabel Label6;
    // private JTextField textField2;
    private JTextField textField3;
    private JTextField textField4;
    //  private JTextField textField5;
    private JTextField textField6;
    //  private JRadioButton RadioButton1;
    //  private JRadioButton RadioButton2;

    private ButtonGroup bg = new ButtonGroup();

    private ResultInfo r = null;
    public JFrame jFrame = new JFrame("配置表格");

    String systemMessage = "";

    public Property(ResultInfo r) {
        this.r = r;
        //  bg.add(RadioButton1);
        //  bg.add(RadioButton2);

        jFrame.setContentPane(this.JPanel);

        jFrame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        jFrame.pack();
        jFrame.setLocationRelativeTo(null);//居中

        OK.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent actionEvent) {
                setData(r);
            }
        });
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        JPanel = new JPanel();
        JPanel.setLayout(new GridLayoutManager(4, 1, new Insets(0, 0, 0, 0), -1, -1));
        JPanelOK = new JPanel();
        JPanelOK.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        JPanel.add(JPanelOK, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        OK = new JButton();
        OK.setText("确定");
        JPanelOK.add(OK);
        JPanel4 = new JPanel();
        JPanel4.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
        JPanel.add(JPanel4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        Label4 = new JLabel();
        Label4.setText("标签数量");
        JPanel4.add(Label4, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField4 = new JTextField();
        JPanel4.add(textField4, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        JPanel6 = new JPanel();
        JPanel6.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
        JPanel.add(JPanel6, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        Label6 = new JLabel();
        Label6.setText("平均每个类别的标签数量");
        JPanel6.add(Label6, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField6 = new JTextField();
        JPanel6.add(textField6, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        JPanel3 = new JPanel();
        JPanel3.setLayout(new GridLayoutManager(1, 2, new Insets(0, 0, 0, 0), -1, -1, true, false));
        JPanel.add(JPanel3, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        Label3 = new JLabel();
        Label3.setText("缺失率");
        JPanel3.add(Label3, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField3 = new JTextField();
        JPanel3.add(textField3, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return JPanel;
    }

    public static void main(String[] args) {

        ResultInfo r = new ResultInfo();
        JFrame frame = new JFrame("Property");
        frame.setContentPane(new Property(r).JPanel);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.pack();
        frame.setVisible(true);
    }


    public void setData(ResultInfo data) {
        String errorMessage = "";
        data.propertiesChanged = true;

        String input3 = textField3.getText();
        double a3 = -1;

        if (Pattern.matches("^0.([0-9]+)?$", input3)) {
            a3 = Double.parseDouble(input3);

        } else {
            errorMessage += "输入缺失率不是范围在(0,1)内的小数\n";
            data.propertiesChanged = false;
        }
        String input4 = textField4.getText();
        int a4 = -1;

        if (Pattern.matches("^[0-9]*[1-9][0-9]*$", input4)) {
            a4 = Integer.parseInt(input4);

        } else {
            errorMessage += "输入标签数量不是正整数\n";
            data.propertiesChanged = false;
        }
//
        String input6 = textField6.getText();
        int a6 = -1;

        if (Pattern.matches("^[0-9]*[1-9][0-9]*$", input6)) {
            a6 = Integer.parseInt(input6);

        } else {
            errorMessage += "输入平均每个类别的标签数量不是正整数\n";
            data.propertiesChanged = false;
        }
//

        if (data.propertiesChanged) {
//
            data.missingRate = a3;
            data.tagNum = a4;

            data.tagNumPerCid = a6;

            jFrame.setVisible(false);

            systemMessage += "加载配置成功！";

        } else {
            JOptionPane.showMessageDialog(null, errorMessage, "输入不合理", JOptionPane.YES_OPTION);
            systemMessage += "加载配置失败！\n" + errorMessage;
        }

    }


    public void getData(ResultInfo data) {
    }

    public boolean isModified(ResultInfo data) {
        return false;
    }
}
